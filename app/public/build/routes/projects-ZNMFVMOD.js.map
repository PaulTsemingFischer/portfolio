{
  "version": 3,
  "sources": ["../../../app/components/ProjectCard.tsx", "../../../app/routes/projects.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\ProjectCard.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\ProjectCard.tsx\");\n  import.meta.hot.lastModified = \"1751612198032.5352\";\n}\n// REMIX HMR END\n\nexport default function ProjectCard({\n  title,\n  description,\n  image,\n  technologies,\n  liveUrl,\n  githubUrl\n}) {\n  return <div className=\"bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow duration-300\">\r\n      <img src={image} alt={title} className=\"w-full h-48 object-cover\" />\r\n      <div className=\"p-6\">\r\n        <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">{title}</h3>\r\n        <p className=\"text-gray-600 mb-4\">{description}</p>\r\n\r\n        <div className=\"flex flex-wrap gap-2 mb-4\">\r\n          {technologies.map(tech => <span key={tech} className=\"bg-gray-100 text-gray-700 px-2 py-1 rounded text-sm\">\r\n              {tech}\r\n            </span>)}\r\n        </div>\r\n\r\n        <div className=\"flex gap-3\">\r\n          {liveUrl && <a href={liveUrl} target=\"_blank\" rel=\"noopener noreferrer\" className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition-colors text-sm\">\r\n              Live Demo\r\n            </a>}\r\n          {githubUrl && <a href={githubUrl} target=\"_blank\" rel=\"noopener noreferrer\" className=\"border border-gray-300 text-gray-700 px-4 py-2 rounded hover:bg-gray-50 transition-colors text-sm\">\r\n              GitHub\r\n            </a>}\r\n        </div>\r\n      </div>\r\n    </div>;\n}\n_c = ProjectCard;\nvar _c;\n$RefreshReg$(_c, \"ProjectCard\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\projects.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\projects.tsx\");\n  import.meta.hot.lastModified = \"1751722188165.817\";\n}\n// REMIX HMR END\n\nimport ProjectCard from \"~/components/ProjectCard\";\nexport const meta = () => {\n  return [{\n    title: \"Projects - Paul Fischer\"\n  }, {\n    name: \"description\",\n    content: \"Check out my latest projects and work.\"\n  }];\n};\nexport default function Projects() {\n  return <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16\">\r\n      <div className=\"text-center mb-12\">\r\n        <h1 className=\"text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4\">My Projects</h1>\r\n        <p className=\"text-xl text-gray-600 max-w-3xl mx-auto\">\r\n          Here are some of the projects I've worked on. Each one represents a learning\r\n          journey and showcases different skills and technologies.\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\">\r\n        {projects.map((project, index) => <ProjectCard key={index} {...project} />)}\r\n      </div>\r\n    </div>;\n}\n_c = Projects;\nconst projects = [{\n  title: \"Comtech Internship - 911 Call Routing Utility\",\n  image: \"images/comtech-logo.jpg\",\n  description: \"Created a command-line Python utility for creating and inserting custom call-routing policies into backend SQL servers used for Massachusetts 911 systems.\",\n  technologies: [\"Python\", \"SQL\"]\n}, {\n  title: \"Graph Algorithms and Visualization\",\n  description: \"Designed and built an interactive interface for graph visualization including algorithms such as Dijkstra's, Karger's, and a physics simulation for the vertex interface.\",\n  image: \"images/graphs-demo2.png\",\n  technologies: [\"Kotlin\", \"JavaFX\", \"SceneBuilder\"],\n  githubUrl: \"https://github.com/FischerAbruzese/Graphs-Algorithms-Visualization\"\n}, {\n  title: \"Critter Simulation\",\n  description: \"Implemented a parser and pretty-printer for a custom Turing-complete language to simulate an interactive, real-time updating world of mutating critters.\",\n  image: \"images/critter-world-demo.png\",\n  technologies: [\"Java\", \"JavaFX\"]\n}];\nvar _c;\n$RefreshReg$(_c, \"Projects\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_jsx_dev_runtime", "_c"]
}
