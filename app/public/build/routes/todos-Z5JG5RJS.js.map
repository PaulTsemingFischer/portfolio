{
  "version": 3,
  "sources": ["../../../app/routes/todos.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\todos.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\todos.tsx\");\n  import.meta.hot.lastModified = \"1751608813188.484\";\n}\n// REMIX HMR END\n\n// app/routes/todos.tsx\nimport { json } from \"@remix-run/node\";\nimport { Form, useLoaderData, useNavigation } from \"@remix-run/react\";\nexport async function loader() {\n  const todos = await getTodos();\n  return json({\n    todos\n  });\n}\nexport async function action({\n  request\n}) {\n  const formData = await request.formData();\n  const intent = formData.get(\"intent\");\n  if (intent === \"create\") {\n    const title = formData.get(\"title\");\n    await createTodo({\n      title,\n      completed: false\n    });\n  } else if (intent === \"toggle\") {\n    const id = formData.get(\"id\");\n    await toggleTodo(id);\n  } else if (intent === \"delete\") {\n    const id = formData.get(\"id\");\n    await deleteTodo(id);\n  }\n  return json({\n    success: true\n  });\n}\nexport default function Todos() {\n  _s();\n  const {\n    todos\n  } = useLoaderData();\n  const navigation = useNavigation();\n  const isSubmitting = navigation.state === \"submitting\";\n  return <div>\r\n      <h1>Todo List</h1>\r\n\r\n      {/* Add new todo */}\r\n      <Form method=\"post\">\r\n        <input type=\"hidden\" name=\"intent\" value=\"create\" />\r\n        <input type=\"text\" name=\"title\" placeholder=\"Add a todo...\" required />\r\n        <button type=\"submit\" disabled={isSubmitting}>\r\n          {isSubmitting ? \"Adding...\" : \"Add Todo\"}\r\n        </button>\r\n      </Form>\r\n\r\n      {/* Todo list */}\r\n      <ul>\r\n        {todos.map(todo => <li key={todo.id}>\r\n            <Form method=\"post\" style={{\n          display: \"inline\"\n        }}>\r\n              <input type=\"hidden\" name=\"intent\" value=\"toggle\" />\r\n              <input type=\"hidden\" name=\"id\" value={todo.id} />\r\n              <button type=\"submit\">\r\n                {todo.completed ? \"\u2713\" : \"\u25CB\"}\r\n              </button>\r\n            </Form>\r\n\r\n            <span className={todo.completed ? \"completed\" : \"\"}>\r\n              {todo.title}\r\n            </span>\r\n\r\n            <Form method=\"post\" style={{\n          display: \"inline\"\n        }}>\r\n              <input type=\"hidden\" name=\"intent\" value=\"delete\" />\r\n              <input type=\"hidden\" name=\"id\" value={todo.id} />\r\n              <button type=\"submit\">Delete</button>\r\n            </Form>\r\n          </li>)}\r\n      </ul>\r\n    </div>;\n}\n_s(Todos, \"PaUPvSpeLPes4wNMeQQ5AMZwcEc=\", false, function () {\n  return [useLoaderData, useNavigation];\n});\n_c = Todos;\nvar _c;\n$RefreshReg$(_c, \"Todos\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAsBA,kBAAqB;AAsCf;AA3DN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,iCAAmC,EAAE;AAAA,EAC9E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAwB;AACxB,cAAY,IAAI,eAAe;AACjC;AAkCe,SAAR,QAAyB;AAC9B,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,cAAc;AAClB,QAAM,aAAa,cAAc;AACjC,QAAM,eAAe,WAAW,UAAU;AAC1C,SAAO,mDAAC,SACJ;AAAA,uDAAC,QAAG,yBAAJ;AAAA;AAAA;AAAA;AAAA,WAAa;AAAA,IAGb,mDAAC,QAAK,QAAO,QACX;AAAA,yDAAC,WAAM,MAAK,UAAS,MAAK,UAAS,OAAM,YAAzC;AAAA;AAAA;AAAA;AAAA,aAAkD;AAAA,MAClD,mDAAC,WAAM,MAAK,QAAO,MAAK,SAAQ,aAAY,iBAAgB,UAAQ,QAApE;AAAA;AAAA;AAAA;AAAA,aAAqE;AAAA,MACrE,mDAAC,YAAO,MAAK,UAAS,UAAU,cAC7B,yBAAe,cAAc,cADhC;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,SALF;AAAA;AAAA;AAAA;AAAA,WAMA;AAAA,IAGA,mDAAC,QACE,gBAAM,IAAI,UAAQ,mDAAC,QAChB;AAAA,yDAAC,QAAK,QAAO,QAAO,OAAO;AAAA,QAC7B,SAAS;AAAA,MACX,GACM;AAAA,2DAAC,WAAM,MAAK,UAAS,MAAK,UAAS,OAAM,YAAzC;AAAA;AAAA;AAAA;AAAA,eAAkD;AAAA,QAClD,mDAAC,WAAM,MAAK,UAAS,MAAK,MAAK,OAAO,KAAK,MAA3C;AAAA;AAAA;AAAA;AAAA,eAA+C;AAAA,QAC/C,mDAAC,YAAO,MAAK,UACV,eAAK,YAAY,WAAM,YAD1B;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WAPF;AAAA;AAAA;AAAA;AAAA,aAQA;AAAA,MAEA,mDAAC,UAAK,WAAW,KAAK,YAAY,cAAc,IAC7C,eAAK,SADR;AAAA;AAAA;AAAA;AAAA,aAEA;AAAA,MAEA,mDAAC,QAAK,QAAO,QAAO,OAAO;AAAA,QAC7B,SAAS;AAAA,MACX,GACM;AAAA,2DAAC,WAAM,MAAK,UAAS,MAAK,UAAS,OAAM,YAAzC;AAAA;AAAA;AAAA;AAAA,eAAkD;AAAA,QAClD,mDAAC,WAAM,MAAK,UAAS,MAAK,MAAK,OAAO,KAAK,MAA3C;AAAA;AAAA;AAAA;AAAA,eAA+C;AAAA,QAC/C,mDAAC,YAAO,MAAK,UAAS,sBAAtB;AAAA;AAAA;AAAA;AAAA,eAA4B;AAAA,WAL9B;AAAA;AAAA;AAAA;AAAA,aAMA;AAAA,SArBwB,KAAK,IAAd;AAAA;AAAA;AAAA;AAAA,WAsBjB,CAAK,KAvBT;AAAA;AAAA;AAAA;AAAA,WAwBA;AAAA,OArCG;AAAA;AAAA;AAAA;AAAA,SAsCL;AACJ;AACA,GAAG,OAAO,gCAAgC,OAAO,WAAY;AAC3D,SAAO,CAAC,eAAe,aAAa;AACtC,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,OAAO;AAExB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
