{
  "version": 3,
  "sources": ["../../../app/routes/users.$id.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\users.$id.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\users.$id.tsx\");\n  import.meta.hot.lastModified = \"1751570794518.564\";\n}\n// REMIX HMR END\n\n// app/routes/users.$id.tsx\nimport { json } from \"@remix-run/node\";\nimport { useLoaderData } from \"@remix-run/react\";\n\n// Server-side data loading\nexport async function loader({\n  params\n}) {\n  const userId = params.id;\n  const user = await fetchUser(userId);\n  if (!user) {\n    throw new Response(\"User not found\", {\n      status: 404\n    });\n  }\n  return json({\n    user\n  });\n}\n\n// Client-side component\nexport default function UserProfile() {\n  _s();\n  const {\n    user\n  } = useLoaderData();\n  return <div>\r\n      <h1>{user.name}</h1>\r\n      <p>Email: {user.email}</p>\r\n      <p>Joined: {user.joinDate}</p>\r\n    </div>;\n}\n\n// Helper function (could be in a separate file)\n_s(UserProfile, \"FpjQZylbefWQChk+MjGNfSb2jDo=\", false, function () {\n  return [useLoaderData];\n});\n_c = UserProfile;\nasync function fetchUser(id) {\n  const response = await fetch(`https://api.example.com/users/${id}`);\n  return response.json();\n}\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAsBA,kBAAqB;AA0Bf;AA/CN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,qCAAuC,EAAE;AAAA,EAClF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA4B;AAC5B,cAAY,IAAI,eAAe;AACjC;AAwBe,SAAR,cAA+B;AACpC,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,cAAc;AAClB,SAAO,mDAAC,SACJ;AAAA,uDAAC,QAAI,eAAK,QAAV;AAAA;AAAA;AAAA;AAAA,WAAe;AAAA,IACf,mDAAC,OAAE;AAAA;AAAA,MAAQ,KAAK;AAAA,SAAhB;AAAA;AAAA;AAAA;AAAA,WAAsB;AAAA,IACtB,mDAAC,OAAE;AAAA;AAAA,MAAS,KAAK;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA,WAA0B;AAAA,OAHvB;AAAA;AAAA;AAAA;AAAA,SAIL;AACJ;AAGA,GAAG,aAAa,gCAAgC,OAAO,WAAY;AACjE,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AAKL,IAAI;AACJ,aAAa,IAAI,aAAa;AAE9B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
